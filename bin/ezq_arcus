#!/bin/bash

# ezq -- easily add pw.x runs to the job queue
# John Wilkinson 28/2/21. Based on the input file by Yinan Chen.

function print_help_arcus {
	cat < /dev/tty << EOF
EzQ (EasyQueue) -- Queue runs for pw.x on ARCUS nodes with ease!
-----------------------------------------------------------------
Sorry! EzQ doesn't work for ARCUS yet. 
EOF
}

nodes=2  #total number of processors divided by number of processors per node
run_time="10:00:00"


#Â parse the arguments
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -h|--help)
            print_help_arcus
            exit
	    ;;
    -t|--time)
    run_time="$2"
    shift # past argument
    shift # past value
    ;;
    -n|--nodes)
    nodes="$2"
    shift # past argument
    shift # past value
    ;;
    *)    #  file name
    input_file="$1" # pwi file 
    shift # past argument
    ;;
esac
done

if [ -z "$input_file" ]
then
	echo "No pwi file found. Aborting";
	exit
fi


# now adjust the number of processors to match the number of nodes*proc per node

file_root="${input_file%.*}"
file_extension="${input_file##*.}"
file_number=$(echo "$input_file" | grep -o ".[0-9].." | grep -o "[0-9].")
pwo_file="${file_root}.pwo"
run_file="${file_root}.run"

cat > /dev/tty << EOF
Setting a job up on Redwood with $nodes nodes, and hence a total of $ntot processors.
The memory per node is $memory GB, nthreads=$nthreads, npools=$npool
The pw.x input file is $input_file
The pw.x output will be saved to $pwo_file
EOF

cat > $run_file << EOF
#!/bin/bash

module load intel-compilers
module load openmpi
module load fftw/3.3.8-intel

export OMP_NUM_THREADS=$nthreads

EOF

if [ $file_extension = 'pwi' ] 
then
cat >> $run_file << EOF
$mpi -n $ntot -m cyclic --mpi=pmi2 $qe_path/pw.x -npool $npool < $input_file > $pwo_file
EOF
fi

if [ $file_extension = 'py' ] 
then
cat >> $run_file << EOF
module load python

source $python_env/bin/activate
python3 $input_file -n $ntot -m cyclic --mpi=pmi2 --pw_command $qe_path/pw.x --mpi_command $mpi
EOF
fi

chmod a+x $run_file
addqueue -s -c "$file_number$file_root" -n "$nodes"x"$nproc" -m $memory -q $queue ./$run_file

